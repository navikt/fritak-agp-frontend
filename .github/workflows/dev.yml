name: Bygg og deploy til testmilj√∏et

on:
  push:
    branches:
      - dev
      - 'preprod/**'
      - main

permissions:
  contents: read
  pull-requests: write
  id-token: write
  actions: read

env:
  APP: fritak-agp-frontend
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NPM_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
  NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}

jobs:
  Bygg:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 24
          registry-url: 'https://npm.pkg.github.com'
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: yarn install --frozen-lockfile
      - run: yarn build
      - uses: actions/upload-artifact@v4
        with:
          name: fritak-frontend-artifact
          path: ${{ github.workspace }}/dist/**/*

  Unit-test:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 24
          registry-url: 'https://npm.pkg.github.com'
      - run: yarn install --frozen-lockfile
      - run: yarn test

  Eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 24
          registry-url: 'https://npm.pkg.github.com'
      - run: yarn install --frozen-lockfile
      - run: yarn lint

  build_and_deploy:
    needs: [Unit-test, Eslint, Bygg]
    name: Build, push and deploy
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      id-token: write
      security-events: 'write'
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 24
          registry-url: 'https://npm.pkg.github.com'
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v4
        with:
          name: fritak-frontend-artifact
          path: dist

      - name: Determine what to do
        id: changed-files
        uses: 'nais/what-changed@main'
        with:
          files: naiserator.yaml #, topic.yaml, statefulset.yaml, etc.

      # - uses: actions/checkout@v4
      - name: Build and push image and SBOM to OCI registry
        if: steps.changed-files.outputs.changed != 'only-inputs'
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: helsearbeidsgiver
          build_secrets: |
            NODE_AUTH_TOKEN=${{ secrets.READER_TOKEN }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.docker-build-push.outputs.image }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'HIGH,CRITICAL'
          limit-severities-for-sarif: true

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Deploy to Nais
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: naiserator.yaml #, topic.yaml, statefulset.yaml, etc.
          WORKLOAD_IMAGE: ${{ steps.docker-build-push.outputs.image }}
          TELEMETRY: ${{ steps.docker-build-push.outputs.telemetry }}
          VARS: nais/dev-gcp.json
